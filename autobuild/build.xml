<project name="abcd" default="all" basedir="..">
    <!--定义打包时间-->
    <tstamp prefix="buildtime">
        <format property="datestamp" pattern="yyyy-MM-dd' 'HH-mm-ss"/>
    </tstamp>
    <!--定义配置文件地址-->
    <property file="${basedir}/autobuild/abcd.properties"/>
	<property environment="env"/>
    <property name="outputdir" location="output/"/>
    
    <taskdef resource="net/sf/antcontrib/antcontrib.properties">  
        <classpath>  
            <pathelement location="${ant.home}/lib/ant-contrib-1.0b3.jar" />  
        </classpath>  
    </taskdef>

    <!--脚本的入口点-->
	<target name="all" depends="clean,init">
	</target>

    <!--设置依赖的类库-->
	<path id="class.path">	
		<fileset dir="${ant.home}/lib" includes="*.jar"/>					
	</path>
	
    <!--删除上一次留下的没用的目录和文件-->
	<target name="clean">
		<echo>clean old files begin</echo>
		<delete dir="${outputdir}" failonerror="false" />
		<echo>clean old files success</echo>		
	</target>

	<!--初始化:创建目录等-->
	<target name="init" >
		<echo>Create output folder</echo>
		<mkdir dir="${outputdir}/${project.name}/"/>
		<echo>Create success</echo>
	</target>	
	
	<!--在jenkins-workspace构建打包-->
	<target name="build" depends="clean,init">
		<echo>build source files begin</echo>
		<antcall target="exeshell"/>	
		<echo>build source files success</echo>
	</target>
	
	<!--运行项目预处理shell脚本并copy到存档目录-->	
	<target name="exeshell">
		<exec executable="/bin/sh">
             <arg line="-c 'rsync -av --delete --exclude 'autobuild' --exclude 'output' --exclude .svn --exclude .git . ${outputdir}/${project.name} 1>/dev/null'" />
             <arg value="${app.server}"/>
		     <arg value="${env.JOB_NAME}"/>
			 <arg value="${tags}"/>
			 <arg value="${env.BUILD_NUMBER}"/>
		</exec>
		<echo>exec and copy to releasedir ${project.name} TAGS:${tags} success</echo>	
	</target>

    <target name="deploy" depends="build">
        <condition property="appserver.test">
            <equals arg1="test" arg2="${app.server}" />                   
        </condition>
		<condition property="appserver.producttest">
            <equals arg1="producttest" arg2="${app.server}" />                   
        </condition>
		<condition property="appserver.preproduct">
            <equals arg1="preproduct" arg2="${app.server}" />                   
        </condition>
		<condition property="appserver.product">
			<equals arg1="product" arg2="${app.server}" />	
		</condition>
        <antcall target="toTestServer"></antcall>
		<antcall target="toProductTestServer"></antcall>
		<antcall target="toPreProduct"></antcall>		
        <antcall target="toProductServer"></antcall>          
    </target>
	
	<target name="toTestServer" if="appserver.test">
		<foreach target="releaseTotest" list="${test.server}" param="ip" delimiter=","></foreach>
	</target>
	<target name="toProductTestServer" if="appserver.producttest">
		<foreach target="release" list="${producttest.server}" param="ip" delimiter=","></foreach>
	</target>
	<target name="toPreProduct" if="appserver.preproduct">
		<foreach target="release" list="${preproduct.server}" param="ip" delimiter=","></foreach>
	</target>
	<target name="toProductServer" if="appserver.product">
		<foreach target="release" list="${product.server}" param="ip" delimiter=","></foreach>
	</target>

	<target name="releaseTotest">
		<echo>begin to sync to test ${ip} server</echo>	
		<exec executable="/bin/sh">
             <arg line="-c 'cd ${outputdir}/${project.name} &amp;&amp; rsync -avrtc --exclude .svn --exclude .git --delete --force . ${ip}::${project.name}/ 2>&amp;1 | egrep -v \(/$\|Skipping\|files/attrs\) &amp;&amp; echo -e &quot;\033deploy to ${ip}::${project.name} success!\033 &quot;'" />
        </exec>
		<!--sshexec usepty="true" host="${ip}" port="${ssh.test.update.port}" username="deploy"  keyfile="/home/jenkins/.ssh/id_rsa" trust="true" command="${ssh.test.update.command}"/-->
		
	 </target>
	 
	<target name="release">
		<echo>begin to sync to IDC ${ip} server</echo>
		<exec executable="/bin/sh">
             <arg line="-c 'cd ${basedir}/output &amp;&amp; rsync -avrtc --exclude .svn --exclude .git --delete --force ./${project.name} ${ip}::default/ &amp;&amp; echo -e &quot;Deploy to ${ip} server success!\033 &quot;'" />
        </exec>
		
		<!--sshexec usepty="true" host="${ip}" port="${ssh.idc.update.port}" username="deploy"  keyfile="/home/jenkins/.ssh/id_rsa" trust="true" command="${ssh.idc.update.command}"/-->
	 </target>
	 
</project>